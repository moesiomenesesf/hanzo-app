{"version":3,"sources":["assets/logo.jpg","assets/loading.svg","style/variables.js","style/styles.js","commons/Header.js","service/ApiService.js","commons/Post.js","commons/SearchBar.js","commons/Loading.js","commons/MessageBox.js","pages/Home/Home.js","serviceWorker.js","commons/Comment.js","pages/PostDetails/PostDetails.js","index.js"],"names":["module","exports","Tema","primaryColor","secondaryColor","terciaryColor","textColor","backgroundColor","backgroundPost","backgroundComment","borderColor","confirmColor","confirmColorHover","dangerColor","dangerColorHover","styled","div","Card","variables","UserImage","HeaderBar","Bar","input","SearchContainer","Buttons","Message","label","LoadingContainer","CommentContainer","Header","src","Logo","alt","Component","ApiService","findAllPosts","fetch","mode","then","res","json","findPostBy","postId","findCommentByPost","findPostByUser","userId","deletePost","method","headers","findAllUsers","Post","props","listenerClick","deleteListener","content","id","state","post","users","this","details","className","undefined","find","user","name","title","body","to","icon","faEye","onClick","bind","faTimes","faArrowLeft","SearchBar","event","value","target","searchListener","type","placeholder","onChange","faSearch","Loading","visible","LoadingGif","isVisible","MessageBox","message","Home","length","setState","posts","loadingVisible","map","key","Boolean","window","location","hostname","match","Comment","comment","email","PostDetails","comments","params","ReactDOM","render","StrictMode","basename","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.394a068f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.712c6430.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.ebdf61f6.svg\";","const Tema = {\r\n    primaryColor: \"#FF0090\",\r\n    secondaryColor: \"#F7D9EA\",\r\n    terciaryColor: \"#FFD6ED\",\r\n    textColor: \"#111\",\r\n    backgroundColor: \"#FEFEFE\",\r\n    backgroundPost: \"#F7FBFF\",\r\n    backgroundComment: \"#F7F7F7\",\r\n    borderColor: \"#DFDFDF\",\r\n    confirmColor: \"#FF95D1\",\r\n    confirmColorHover: \"#FF73C2\",\r\n    dangerColor:\"#F97884\",\r\n    dangerColorHover: \"#FB616F\",\r\n}\r\n        \r\nexport default Tema;\r\n\r\n","import styled from 'styled-components';\r\nimport variables from './variables';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-top: 54px;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n    padding: 20px;\r\n    margin: 4px 0;\r\n    border: 1px solid #f0f0f0;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: ${variables.backgroundPost};\r\n    \r\n    &.selected{\r\n        background-color: ${variables.terciaryColor};\r\n    }\r\n\r\n    &.comment{\r\n        background-color: ${variables.backgroundComment};\r\n    }\r\n\r\n    &.post{\r\n        background-color: ${variables.backgroundPost};\r\n    }\r\n\r\n    label{\r\n        width: 90%;\r\n        line-height: 100%;\r\n        text-align: justify;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    h3{\r\n        text-align: center;\r\n        font-size: 1em;\r\n    }\r\n\r\n    p{\r\n        text-align: justify;\r\n        font-size: 0.9em;\r\n    }\r\n\r\n`;\r\n\r\nexport const UserImage = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #ff0090;\r\n    color: white;\r\n`;\r\n\r\nexport const HeaderBar = styled.div`\r\n    width: 100%;\r\n    background-color: ${variables.primaryColor};\r\n    height: 50px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index:2;\r\n\r\n    img{\r\n        width: 115px;\r\n    }\r\n`;\r\n\r\nexport const Bar = styled.input`\r\n    width: 100%;\r\n    height: 25px;\r\n    padding-inline-start: 5px;\r\n    border-radius: 2px;\r\n    border: 1px solid ${variables.borderColor};\r\n    z-index:1;\r\n\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n    width: 70%;\r\n    position: relative;\r\n    margin: 0 auto 18px;\r\n    .fa-search{\r\n        position: absolute;\r\n        top: 7px;\r\n        right: 1px;\r\n        color: ${variables.secondaryColor};\r\n    }\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n    @media only screen and (max-width: 450px) {\r\n        flex-direction: column;\r\n        button{\r\n            align-self: center;\r\n            margin: 0 0 !important;\r\n            &.confirm{\r\n                margin-bottom: 5px !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 10px;\r\n    \r\n    a{\r\n        cursor:default;\r\n    }\r\n    button{\r\n        display: flex;\r\n        padding: 10px 20px;\r\n        margin: 0 5px;\r\n        align-items: flex-end;\r\n        border: none;\r\n        border-radius: 3px;\r\n        color: rgba(0,0,0,0.55);\r\n\r\n        &:hover, label{\r\n            cursor:pointer;\r\n        }\r\n\r\n        svg{\r\n            margin-right: 5px;\r\n        }\r\n\r\n        label{\r\n            font-weight: 700;\r\n        }\r\n    \r\n        &.confirm{\r\n            background-color:${variables.confirmColor};\r\n            transition: background-color .2s linear;\r\n            margin: 0 5px 0 0;\r\n            &:hover{\r\n                transition: background-color .2s linear;\r\n                background-color:${variables.confirmColorHover};\r\n            }\r\n\r\n            &.back{\r\n                align-items: center;\r\n            }\r\n        }\r\n    \r\n        &.remover{\r\n            background-color:${variables.dangerColor};\r\n            transition: background-color .2s linear;\r\n\r\n            &:hover{\r\n                transition: background-color .2s linear;\r\n                background-color:${variables.dangerColorHover};\r\n            }\r\n        }\r\n    }\r\n\r\n`;\r\n\r\n\r\nexport const Message = styled.label`\r\n    text-align: center;\r\n    font-size: 14px;\r\n    margin-top: 10px;\r\n    background-color: ${variables.secondaryColor};\r\n    padding: 20px;\r\n    color: ${variables.textColor}A5;\r\n`;\r\n\r\nexport const LoadingContainer = styled.div`\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    z-index: 5;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${variables.backgroundColor}DD;\r\n    display: flex;\r\n    justify-content: center;\r\n    img{\r\n        width: 80px;\r\n    }\r\n`;\r\n\r\nexport const CommentContainer = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\n","import React, {Component} from 'react';\r\nimport {HeaderBar} from '../style/styles';\r\nimport Logo from '../assets/logo.jpg';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <HeaderBar>\r\n                <img src={Logo} alt=\"logoHanzo\"></img>\r\n            </HeaderBar>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Header;","const ApiService = {\r\n\r\n    findAllPosts: () => {\r\n        return fetch('https://jsonplaceholder.typicode.com/posts', {mode: 'cors'})\r\n            .then(res => res.json());\r\n    },\r\n\r\n    findPostBy: postId => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {mode: 'cors'})\r\n            .then(res => res.json());\r\n    },\r\n\r\n    findCommentByPost: postId => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`, {mode: 'cors'})\r\n            .then(res => res.json());\r\n    },\r\n\r\n    findPostByUser: userId => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`, {mode: 'cors'})\r\n            .then(res => res.json());\r\n    },\r\n\r\n    deletePost: postId => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {method: 'DELETE', mode: 'cors', headers: {'content-type': 'application/json'},})\r\n            .then(res => res.json());\r\n    },\r\n\r\n    findAllUsers: () => {\r\n        return fetch('https://jsonplaceholder.typicode.com/users', {mode: 'cors'})\r\n            .then(res => res.json());\r\n    },\r\n}\r\n\r\nexport default ApiService;","import React, {Component, Fragment} from 'react';\r\nimport {Card, UserImage, Buttons} from '../style/styles';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Post extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            post: this.props.content,\r\n            users: this.props.users\r\n        }\r\n    }\r\n\r\n    listenerClick = () => {\r\n        this.props.deleteListener(this.props.content.id);\r\n    }\r\n\r\n    render(){\r\n        const {content, details, users} = this.props;\r\n        if(details==null){\r\n            return(\r\n                <Card className={details}>\r\n                    <UserImage>\r\n                        {content.userId}\r\n                    </UserImage>\r\n                    <h3>{users.find(user=>user.id===content.userId)!==undefined?users.find(user=>user.id===content.userId).name:null}</h3>\r\n                    <h3>{content.title}</h3>\r\n                    <p>{content.body}</p>\r\n                    <Buttons>\r\n                        <Link to={`/details/${content.id}`}>\r\n                            <button className=\"confirm\">\r\n                                <FontAwesomeIcon icon={faEye}/>\r\n                                <label> Visualizar </label>\r\n                            </button>\r\n                        </Link>\r\n                        <button className=\"remover\" onClick={this.listenerClick.bind(this)}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                            <label> Remover </label>\r\n                        </button>\r\n                    </Buttons>\r\n                </Card>\r\n            )\r\n        }\r\n        return(\r\n            <Fragment>\r\n                <Buttons>\r\n                    <Link to={`/`}>\r\n                        <button className=\"confirm back\">\r\n                            <FontAwesomeIcon icon={faArrowLeft}/>\r\n                            <label>Voltar</label>\r\n                        </button>\r\n                    </Link>\r\n                </Buttons>\r\n                \r\n                <Card className={details}>\r\n                    <UserImage>\r\n                        {content.userId}\r\n                    </UserImage>\r\n                    <h3>{content.title}</h3>\r\n                    <p>{content.body}</p>\r\n                </Card>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Post;","import React, {Component} from 'react'\r\nimport {Bar, SearchContainer} from '../style/styles'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SearchBar extends Component{\r\n\r\n    listenerClick = event => {\r\n        const {value} = event.target;\r\n        this.props.searchListener(value);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <SearchContainer>\r\n            <Bar type='number' placeholder=\"Pesquisar por ID de Usuário\" onChange={this.listenerClick}>\r\n             </Bar>\r\n             <FontAwesomeIcon icon={faSearch}/>\r\n            </SearchContainer>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React, {Component} from 'react';\r\nimport LoadingGif from '../assets/loading.svg';\r\nimport {LoadingContainer} from '../style/styles'\r\nclass Loading extends Component{\r\n\r\n    isVisible(visible){\r\n        if(visible){\r\n            return(\r\n                <LoadingContainer>\r\n                    <img src={LoadingGif} alt=\"loading\"/>\r\n                </LoadingContainer>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {visible} = this.props;\r\n        return this.isVisible(visible);\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, {Component} from 'react';\r\nimport {Message} from '../style/styles';\r\nclass MessageBox extends Component{\r\n    render(){\r\n        const {message} = this.props;\r\n        if(message!==\"\"){\r\n            return(\r\n                <Message>{message}</Message>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n\r\n    }\r\n}\r\nexport default MessageBox;","import React, { Component, Fragment } from 'react';\nimport '../../style/variables.scss';\nimport './Home.scss';\nimport Header from '../../commons/Header'\nimport ApiService from '../../service/ApiService'\nimport Post from '../../commons/Post';\nimport SearchBar from '../../commons/SearchBar'\nimport Loading from '../../commons/Loading'\nimport MessageBox from '../../commons/MessageBox'\nclass Home extends Component {\n\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      posts: [],\n      users: [],\n      loadingVisible: false,\n      message: \"\"\n    }\n  }\n\n  \n  componentDidMount(){\n    this.setState({loadingVisible:true});\n    ApiService.findAllPosts()\n      .then(res => {\n        this.setState({posts : [...this.state.posts, ...res]});\n        this.setState({loadingVisible:false});\n        ApiService.findAllUsers()\n          .then(res =>{\n            this.setState({users : [...this.state.users, ...res]});\n          });\n      });\n  }\n\n  searchListener = userId => {\n    if(userId !== \"\"){\n      ApiService.findPostByUser(userId)\n      .then(res =>{\n        if(!res.length){\n          this.setState({message:\"Não foi possível encontrar um usuário com este ID. Tente outro, por favor.\"});\n        }else{\n          this.setState({message:''});\n        }\n        this.setState({\n          posts:res          \n        })\n      })\n    }else{\n      ApiService.findAllPosts()\n      .then(res => {\n        this.setState({posts : res});\n      });\n    }\n    \n  }\n\n  deleteListener = postId => {\n    this.setState({loadingVisible:true});\n    ApiService.deletePost(postId)\n    .then(res =>{\n      this.setState({loadingVisible:false, message: \"Post excluído com sucesso.\"});\n    })\n  }\n\n  render(){\n    return (\n      <Fragment>\n        <Loading visible={this.state.loadingVisible}/>\n        <Header/>\n        <SearchBar searchListener={this.searchListener}></SearchBar>\n        <MessageBox message={this.state.message}/>\n        {this.state.posts.map(post => \n            <Post key={post.id} content={post} details={null} users={this.state.users} deleteListener={this.deleteListener} />\n        )}\n      </Fragment>\n    );\n  }\n  \n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react'\r\nimport { Card } from '../style/styles';\r\n\r\nclass Comment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            comment: this.props.content,\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {content, details} = this.props;\r\n        return(\r\n            <Card className={details}>\r\n                <h3>{content.name}</h3>\r\n                <h4>{content.email}</h4>\r\n                <p>{content.body}</p>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, { Component, Fragment } from 'react';\nimport './PostDetails.scss';\nimport Header from '../../commons/Header'\nimport ApiService from '../../service/ApiService'\nimport Loading from '../../commons/Loading'\nimport MessageBox from '../../commons/MessageBox'\nimport Comment from '../../commons/Comment';\nimport Post from '../../commons/Post';\nimport {CommentContainer} from '../../style/styles'\n\nclass PostDetails extends Component {\n\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      post:{},\n      comments: [],\n      users: [],\n      loadingVisible: false,\n      message: \"\"\n    }\n  }\n  \n  componentDidMount(){\n    const {postId} = this.props.match.params;\n    this.setState({loadingVisible:true});\n    ApiService.findPostBy(postId)\n      .then(res => {\n        \n        this.setState({post : res});\n\n        ApiService.findCommentByPost(postId)\n        .then(res => {\n          this.setState({comments : res});\n          this.setState({loadingVisible:false});\n        });\n    });\n      \n  }\n\n  render(){\n    return (\n      <Fragment>\n        <Loading visible={this.state.loadingVisible}/>\n        <Header/>\n        <MessageBox message={this.state.message}/>\n        <Post content={this.state.post} details={\"details selected\"}/>\n        <h4>Comentários</h4>\n        <CommentContainer >\n          {this.state.comments.map(comment => \n            <Comment key={comment.id} content={comment} details={\"details comment\"}/>\n          )}\n        </CommentContainer>\n      </Fragment>\n    );\n  }\n  \n}\n\nexport default PostDetails;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/Home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport PostDetails from './pages/PostDetails/PostDetails';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/hanzo-app'}>\n      <Switch>\n        <Route path='/' exact component={Home}/>\n        <Route path='/details/:postId' component={PostDetails}/>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}